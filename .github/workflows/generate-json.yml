name: Generate Images JSON

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  generate_json:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Generate JSON files with average colors
        run: |
          npm install sharp
          
          node -e '
            const fs = require("fs");
            const path = require("path");
            const sharp = require("sharp");

            async function processGalleries() {
              const rootDir = process.cwd();
              const rootContents = await fs.promises.readdir(rootDir);
              
              for (const dir of rootContents) {
                if (dir.startsWith("gallery_")) {
                  const galleryPath = path.join(rootDir, dir);
                  console.log(`Processing gallery: ${galleryPath}`);

                  const files = (await fs.promises.readdir(galleryPath))
                    .filter(file => file.toLowerCase().endsWith(".jpg") || file.toLowerCase().endsWith(".jpeg"))
                    .sort();

                  const imageData = await Promise.all(files.map(async file => {
                    const filePath = path.join(galleryPath, file);
                    try {
                      const { dominant } = await sharp(filePath).stats();
                      const rgbColor = [dominant.r, dominant.g, dominant.b];
                      const hexColor = "#" + rgbColor.map(c => Math.round(c).toString(16).padStart(2, "0")).join("");
                      return { filename: file, avgColor: hexColor };
                    } catch (err) {
                      console.error(`Error processing ${file}:`, err);
                      return { filename: file, avgColor: "#e0e0e0" };
                    }
                  }));

                  await fs.promises.writeFile(
                    path.join(galleryPath, "images.json"),
                    JSON.stringify(imageData, null, 2)
                  );

                  console.log(`images.json for ${dir} generated successfully.`);
                }
              }
            }

            processGalleries();
          '
      
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Updated images.json with average colors'
          file_pattern: 'gallery_*/images.json'
